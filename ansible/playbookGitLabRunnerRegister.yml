---
- name: "Install docker, install GitLab Runner and register it"
  hosts: my-gitlab-runner
  become: yes
  tasks:
    - name: Update all packages
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3

    - name: Install gitlab runner
      shell: |
        curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh" | sudo bash
        sudo yum install gitlab-runner -y
        
    - name: Register gitlab runner / copy config file to GitLAb Runner
      shell: |
        sudo gitlab-runner register --name "my-gitlab-runner" --tag-list "my-tag"  --non-interactive --url "https://gitlab.example.com/" --registration-token "my_token_here" --executor "docker" --docker-image docker:20.10.10 --docker-privileged --docker-volumes "/certs/client" --run-untagged="false"
